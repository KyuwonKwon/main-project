# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  name: String!
  phone: String!
  email: String!
  personal: String!
  logId: String!
  point: Int!
}

type UserWithoutPw {
  id: String!
  name: String!
  phone: String!
  email: String!
  personal: String!
  logId: String!
  point: Int!
}

type ProductMainCategory {
  id: String!
  name: String!
}

type ProductSubCategory {
  id: String!
  name: String!
  productMainCategory: ProductMainCategory!
}

type ProductAllergy {
  id: String!
  name: String!
  products: [Product!]!
}

type ProductNutritionFacts {
  id: String!
  servingsPerContainer: Float!
  unitOfServingsPerContainer: String!
  caffeine: Float!
  kcal: Float!
  Na: Float!
  sugars: Float!
  saturatedFat: Float!
  protein: Float!
}

type ProductImage {
  id: String!
  Url: String!
}

type Product {
  id: String!
  koName: String!
  enName: String!
  description: String!
  price: Int!
  isNew: Boolean!
  stock: Int!
  productNutritionFacts: ProductNutritionFacts!
  productSubCategory: ProductSubCategory!
  productAllergies: [ProductAllergy!]!
  productImage: ProductImage!
}

type UserOrderlist {
  id: String!
  totalCost: Float!
  user: User!
}

type PointTransaction {
  id: String!
  impUid: String!
  amount: Int!
  status: POINT_TRANSACTION_STATUS_ENUM!
  user: User!
  createdAt: DateTime!
}

enum POINT_TRANSACTION_STATUS_ENUM {
  PAYMENT
  CANCEL
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  fetchLoginUser: User!
  fetchProducts: [Product!]!
  fetchProductsWithDeleted: [Product!]!
  fetchProduct(productId: String!): Product!
  fetchUsers: [UserWithoutPw!]!
  fetchUsersWithDeleted: [UserWithoutPw!]!
}

type Mutation {
  login(logId: String!, password: String!): String!
  restoreAccessToken: String!
  deleteLoginUser: Boolean!
  updateUserPwd(newPwd: UpdateUserInput!): UserWithoutPw!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(productId: String!, updateProductInput: UpdateProductInput!): Product!
  deleteProduct(productId: String!): Boolean!
  restoreProduct(productId: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): UserWithoutPw!
  createUserAddress(userId: String!, createUserAddressInput: CreateUserAddressInput!): UserWithoutPw!
  restoreUser(userId: String!): Boolean!
  createPointTransaction(impUid: String!, amount: Float!): PointTransaction!
  cancelPointTransaction(impUid: String!): PointTransaction!
}

input UpdateUserInput {
  name: String
  phone: String
  email: String
  personal: String
  logId: String
}

input CreateProductInput {
  koName: String!
  enName: String!
  description: String!
  price: Int!
  isNew: Boolean!
  stock: Int!
  productNutritionFactsInput: ProductNutritionFactsInput!
  productSubCategoryInput: ProductSubCategoryInput!
  productImageInput: ProductImageInput!
  productAllergies: [String!]!
}

input ProductNutritionFactsInput {
  servingsPerContainer: Float!
  unitOfServingsPerContainer: String!
  caffeine: Float!
  kcal: Float!
  Na: Float!
  sugars: Float!
  saturatedFat: Float!
  protein: Float!
}

input ProductSubCategoryInput {
  name: String!
  productMainCategoryName: String!
}

input ProductImageInput {
  Url: String!
}

input UpdateProductInput {
  koName: String
  enName: String
  description: String
  price: Int
  isNew: Boolean
  stock: Int
  productNutritionFactsInput: ProductNutritionFactsInput
  productSubCategoryInput: ProductSubCategoryInput
  productImageInput: ProductImageInput
  productAllergies: [String!]
}

input CreateUserInput {
  name: String!
  phone: String!
  email: String!
  personal: String!
  logId: String!
}

input CreateUserAddressInput {
  name: String!
  isMain: Boolean!
}